version: "3.4"

services:
  s3:
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    image: "minio/minio:latest"
    entrypoint: sh
    command: -c "mkdir -p /data/dev && minio server /data --address :9000 --console-address :9001"
    environment:
      - MINIO_ROOT_USER=sa
      - MINIO_ROOT_PASSWORD=sa
    container_name: s3
    volumes:
      - minio-volume:/data:delegated
    ports:
      - "9000:9000"
      - "9001:9001"

  mysql:
    image: mysql:5.7
    # restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "user"
    ports:
      - "3308:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  dataextraction.api:
    image: api
    build:
      context: "."
      dockerfile: "Dockerfile"
    # restart: always
    environment:
      TZ: "Asia/Kolkata"
      ConnectionStrings__UserContext: "persistsecurityinfo=True;port=3306;server=mysql;user id=root;password=password;database=user;allowuservariables=True"
      AWSSettings__S3BucketName: "dev"
      AWSSettings__AccessKey: "sa"
      AWSSettings__SecretAccessKey: "sa"
      AWSSettings__ServiceUrl: "http://s3:9000"
      AWSSettings__RegionEndpoint: "us-east-1"
    ports:
      - "8080:80"
    # depends_on:
    #   - minio
    #   - mysql
    #networks:
    #  - custom_network

volumes:
  minio-volume:
  mysql-data:

#networks:
#  custom_network:
# http://localhost:9001/browser for minio 
## Database localhost :3308
# mysql -h localhost -P 3306 --protocol=tcp -u root 
